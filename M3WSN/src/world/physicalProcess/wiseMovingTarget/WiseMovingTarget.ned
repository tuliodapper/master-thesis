// *****************************************************************************
//  Copyright (C): Christian Nastasi, 2011                                    
//  Author(s): Christian Nastasi                                              
//  Developed at the:                                                         
//  - Retis LAB, TeCIP Institute, Scuola Superiore Sant'Anna (Pisa)           
//  - School of Elec Eng and Computer Science, Queen Mary University (London) 
//  This file is distributed under the terms in the attached LICENSE_2 file.  
//  If you do not find this file, copies can be found by writing to:          
//  - c.nastasi@sssup.it                                                      
//  - nastasichr@gmail.com                                                    
//  - andrea.cavallaro@eecs.qmul.ac.uk                                        
// *****************************************************************************

package wise_mnet.world.physicalProcess.wiseMovingTarget;

simple WiseMovingTarget like 
			wise_mnet.world.physicalProcess.WiseBasePhysicalProcess {

parameters:
 	bool collectTraceInfo = default (false);
	bool collectOutputInfo = default (false);
 	bool log_enabled = default (false);
	string description = default ("Moving Target");
	double x_init = default(0);
	double y_init = default(0);
	double z_init = default(0);
	double bb_width = default(10);
	double bb_height = default(10);
	double bb_depth = default(10);
	double update_time = default(1.0);
        string move_type = default("");
        double move_min_x = default(0);
        double move_max_x = default(0);
        double move_min_y = default(0);
        double move_max_y = default(0);
	double move_later = default(0);
	double noise = default(0.0);

	double inputType = default (1);	// 0 --> values are dictated by "directNodeValueAssignment" parameter
									// 1 --> values are generated by the additive diffused sources 
									// 2 --> values read by the tracefile  (not yet ipmlemented)
	//string description = default ("Fire");
	double max_num_snapshots = default (10);	// the maximum number of descrete states/snapshots that can 
												// be specified in source_X params below
	double sigma = default (0.2);				// standart deviation to the zero-mean additive gaussian noise (sigma)
	double multiplicative_k = default (0.25);	// multiplicative parameter (k)
	double attenuation_exp_a = default (1.0);	// attenuation exponent (a)
	double numSources = default (1);			// how many points in space will return this value, 
												// up to 5 sources supported
	double initialSensedValue = default(25.0);
	// strings showing how sources evolve over time (change in location and value)
	string source_0 = default ("0 10 10 30.5; 100 10 10 45; 200 10 10 20; 400 10 10 47.3");
	string source_1 = default ("");
	string source_2 = default ("");
	string source_3 = default ("");
	string source_4 = default ("");



gates:
 	output toNode[];
	input fromNode[];

}
