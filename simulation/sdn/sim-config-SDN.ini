[General]
include ../M3WSN.ini 	# ALWAYS include the WiseCastalia.ini file

# ==============================================
# Simulation setup
# ==============================================
SN.dummyChannel.collectTraceInfo = false

sim-time-limit = $simTimeLimits
SN.numNodes = $numNodes
SN.field_x = $fieldX # meters
SN.field_y = $fieldY # meters
SN.coverageNode.fieldX = $fieldX
SN.coverageNode.fieldY = $fieldY
SN.coverageNode.numNodes = $numNodes
SN.coverageNode.vector-recording = false
SN.wiseTerrain.gui_wait_start = false

# ==============================================
# Resource Manager (cpu, memory, energy)
# ==============================================
SN.node[*].ResourceManager.collectTraceInfo = false # se isso ficar como true, da problema

#18720 Joules is the typical energy of two AA batteries

SN.node[$controllerNodeId].ResourceManager.initialEnergy = $energyControllerNode
SN.node[$firstUserNodeId..$lastUserNodeId].ResourceManager.initialEnergy = $energyUserNode #(4 AA batteries)
SN.node[$firstRelayNodeId..$lastRelayNodeId].ResourceManager.initialEnergy = $energyRelayNode #(4 AA batteries)

# ==============================================
# Sensor Manager
# ==============================================
SN.node[*].SensorManager.collectTraceInfo = false
SN.node[*].SensorManager.collectOutputInfo = false

SN.node[*].SensorManagerName = "CritDirectionalSensor" # Camera Node
SN.node[*].SensorManager.sensorTypes = "multimedia"
SN.node[*].SensorManager.isSink = false
SN.node[*].SensorManager.video = "../Parameters/videoTraces/multiQoE/st_container_cif_h264_300_20"
SN.node[*].SensorManager.fecType = 2         	#0 - without FEC | 1 - standard FEC | 2 - QoE-aware FEC
SN.node[*].SensorManager.fecRedundancy = 0.8 	#from 0(0%) to 1(100%)
SN.node[*].SensorManager.gopSize = 20
SN.node[*].SensorManager.pRedundancy = 0.5   	#from 0(0%) to 1(100%) percentage of P-frames with redundancy
SN.node[*].SensorManager.energyPerSample = 0.5

# ==============================================
# Application 
# ==============================================
SN.node[*].Application.collectTraceInfo = false
SN.node[*].Application.collectOutputInfo = false

SN.node[*].ApplicationName 													= "$appName"
SN.node[*].Application.loadPath 											= "$simpath"	
SN.node[$firstUserNodeId..$lastUserNodeId].Application.sendDataPackets 		= $sendDataPackets
SN.node[$firstUserNodeId..$lastUserNodeId].Application.moveRandomPositions 	= $moveRandomPositions
SN.node[$firstUserNodeId..$lastUserNodeId].Application.packet_rate 			= $packetRate
SN.node[$firstUserNodeId..$lastUserNodeId].Application.startupDelay 		= $startupDelay
SN.node[$firstUserNodeId..$lastUserNodeId].Application.firstUserNodeId 		= $firstUserNodeId
SN.node[$firstUserNodeId..$lastUserNodeId].Application.numUserNodes 		= $numUserNodes
SN.node[$firstUserNodeId..$lastUserNodeId].Application.simTimeLimit 		= $simTimeLimit

# ===============================================
# Communication: XLINGO, MOBIFANET, XLinGOCRouting (Network Layer)
# ===============================================	

# Controller
SN.node[$controllerNodeId].Communication.RoutingProtocolName 			= "CNRouting"
SN.node[$controllerNodeId].Communication.Routing.TIME_TO_LIVE			= ($lastRelayNodeId + 1)
SN.node[$controllerNodeId].Communication.Routing.MAX_RETRANSMITIONS		= $MAX_RETRANSMITIONS
SN.node[$controllerNodeId].Communication.Routing.TIMEOUT_TRACE 			= $TIMEOUT_TRACE
SN.node[$controllerNodeId].Communication.Routing.TIMEOUT_PACKETS 		= $TIMEOUT_PACKETS
SN.node[$controllerNodeId].Communication.Routing.INTERVAL_COUNTER 		= $INTERVAL_COUNTER
SN.node[$controllerNodeId].Communication.Routing.TIMEOUT_REQUEST 		= $TIMEOUT_REQUEST
SN.node[$controllerNodeId].Communication.Routing.firstRelayNodeId 		= $firstRelayNodeId
SN.node[$controllerNodeId].Communication.Routing.lastRelayNodeId 		= $lastRelayNodeId

# Relay
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.RoutingProtocolName 			= "RNRouting"
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIME_TO_LIVE			= ($lastRelayNodeId + 1)
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.MAX_RETRANSMITIONS	= $MAX_RETRANSMITIONS
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.POSITION_RANGE_USER	= $POSITION_RANGE_USER
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.INTERVAL_COUNTER 	= $INTERVAL_COUNTER
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_TRACE 		= $TIMEOUT_TRACE
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_KEEP_ALIVE 	= $TIMEOUT_KEEP_ALIVE
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_PACKET_IN 	= $TIMEOUT_PACKET_IN
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_RESPONSE 	= $TIMEOUT_RESPONSE
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_NOTIFY_USER 	= $TIMEOUT_NOTIFY_USER
SN.node[$firstRelayNodeId..$lastRelayNodeId].Communication.Routing.TIMEOUT_STATUS 		= $TIMEOUT_STATUS

# User
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.RoutingProtocolName 			= "UNRouting"
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIME_TO_LIVE			= ($lastRelayNodeId + 1)
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIMEOUT_TRACE 			= $TIMEOUT_TRACE
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIMEOUT_HELLO 			= $TIMEOUT_HELLO
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIMEOUT_CHECK 			= $TIMEOUT_CHECK
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIMEOUT_REFRESH 		= $TIMEOUT_REFRESH
SN.node[$firstUserNodeId..$lastUserNodeId].Communication.Routing.TIMEOUT_STATUS 		= $TIMEOUT_STATUS

# General
SN.node[*].Communication.Routing.collectTraceInfo = true
SN.node[*].Communication.Routing.collectOutputInfo = true
SN.node[*].Communication.Routing.netDataFrameOverhead = 6
SN.node[*].Communication.Routing.maxNetFrameSize = 0

# ==============================================
# Communication: CSMA (MAC)
# ==============================================
SN.node[*].Communication.MAC.collectTraceInfo = true
SN.node[*].Communication.MAC.collectOutputInfo = true
 
SN.node[*].Communication.MACProtocolName = "TunableMAC"
SN.node[*].Communication.MAC.beaconFrameSize = 6
SN.node[*].Communication.MAC.dutyCycle = 1.0
SN.node[*].Communication.MAC.randomTxOffset = 0.0
SN.node[*].Communication.MAC.backoffType = 2 
SN.node[*].Communication.MAC.w1 = 0.4 #weight to frame
SN.node[*].Communication.MAC.w2 = 0.4 #weight to delay
SN.node[*].Communication.MAC.w3 = 0.2 #weight to SR
SN.node[*].Communication.MAC.delayLimit = 300 #limite m��ximo de delay toleravel -- larissa
SN.node[*].Communication.MAC.dropType = "dropTail"

# ==============================================
# Communication: Radio (Physical Layer)
# ==============================================
SN.node[*].Communication.Radio.collectTraceInfo = false
SN.node[*].Communication.Radio.collectOutputInfo = false

SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/$RadioParametersFile.txt"
SN.node[*].Communication.Radio.maxPhyFrameSize = 1100
SN.node[*].Communication.Radio.TxOutputPower = "$TxOutputPowerdBm" #Tx_dBm -10 -5 -1 2 6 9 12 13 17
SN.node[*].Communication.Radio.mode = "$mode" #111Mbps, 1Mbps, 2Mbps, 5Mbps, 6Mbps, 9Mbps, 11Mbps, 12Mbps, 18Mbps 
SN.node[*].Communication.Radio.CCAthreshold = -85

# ==============================================
# Communication: Wireless Channel
# ==============================================
SN.wirelessChannel.collectTraceInfo = false
SN.wirelessChannel.collectOutputInfo = false
	
SN.wirelessChannel.onlyStaticNodes = false
SN.wirelessChannel.configName = "${configname}"
SN.wirelessChannel.pathLossExponent = 2.3	
SN.wirelessChannel.sigma = 1
SN.wirelessChannel.xCellSize = 5
SN.wirelessChannel.yCellSize = 5

# ==============================================
# Mobility
# ==============================================
SN.node[*].MobilityManager.collectTraceInfo = false
SN.node[*].MobilityManager.collectOutputInfo = false

SN.node[*].MobilityManagerName = "NoMobilityManager"
